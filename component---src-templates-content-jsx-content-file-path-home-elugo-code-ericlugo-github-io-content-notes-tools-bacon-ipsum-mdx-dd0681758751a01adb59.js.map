{"version":3,"file":"component---src-templates-content-jsx-content-file-path-home-elugo-code-ericlugo-github-io-content-notes-tools-bacon-ipsum-mdx-dd0681758751a01adb59.js","mappings":"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","sources":["webpack://eric-lugo-dev-blog/./content/notes/tools-bacon-ipsum.mdx","webpack://eric-lugo-dev-blog/./src/templates/content.jsx","webpack://eric-lugo-dev-blog/./src/components/CitationCard.jsx","webpack://eric-lugo-dev-blog/./src/components/ExternalLink.jsx","webpack://eric-lugo-dev-blog/./src/components/ImageCard.jsx","webpack://eric-lugo-dev-blog/./.yarn/__virtual__/@mdx-js-react-virtual-74dae20aac/0/cache/@mdx-js-react-npm-2.3.0-d5582a450b-f45fe77955.zip/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    blockquote: \"blockquote\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {ExternalLink, CitationCard} = _components;\n  if (!CitationCard) _missingMdxReference(\"CitationCard\", true);\n  if (!ExternalLink) _missingMdxReference(\"ExternalLink\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Alright, here's the deal. Sometimes we all need a little placeholder text when building out our projects. There's tons of options out there but I just wanted to take a quick moment to showcase a nugget of internet gold that I ran into a while back. It is with great joy that I present, \", React.createElement(ExternalLink, {\n    URL: \"https://baconipsum.com/\",\n    citationNum: \"1\"\n  }, \"BACON IPSUM\"), \". A very... meaty... text generator created by \", React.createElement(ExternalLink, {\n    URL: \"https://twitter.com/CodeGeekATX\",\n    citationNum: \"2\"\n  }, \"Pete Nelson\"), \". If you need any convincing, Bacon Ipsum has even made its way into Google's \", React.createElement(ExternalLink, {\n    URL: \"https://web.dev/responsive-web-design-basics/#optimize-text-for-reading\",\n    citationNum: \"3\"\n  }, \"Responsive Design Documentation\"), \"!\"), \"\\n\", React.createElement(_components.h2, null, \"Here's a preview of what it looks like:\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Bacon ipsum dolor amet tongue hamburger cow burgdoggen. Shank swine cow tri-tip turducken chislic frankfurter venison shoulder landjaeger ham pork belly meatball. Doner ham kielbasa spare ribs pork. Chislic pork belly porchetta pork ribeye pancetta fatback sirloin. Cupim salami doner, ball tip ham boudin porchetta short loin.\"), \"\\n\", React.createElement(_components.p, null, \"Bresaola hamburger cow landjaeger short ribs picanha meatball meatloaf. Tri-tip andouille pork filet mignon, ground round cupim short loin chuck. Shankle filet mignon tenderloin pork loin pork belly, corned beef hamburger. Prosciutto pork cupim ham hock brisket. Bacon sausage drumstick prosciutto hamburger turkey pig pancetta filet mignon alcatra pork loin jowl shank rump.\"), \"\\n\", React.createElement(_components.p, null, \"Chuck shankle ham spare ribs tail chislic. Kielbasa meatloaf ribeye chuck. Chuck pancetta leberkas, shoulder andouille cow turducken shankle sausage brisket pastrami hamburger ribeye. Meatball chicken bacon, rump tail filet mignon buffalo pork. Ham filet mignon alcatra prosciutto, meatball turkey brisket bresaola. Short loin pork chop drumstick chislic meatball kielbasa filet mignon. Jowl salami t-bone ribeye kielbasa pancetta.\"), \"\\n\", React.createElement(_components.p, null, \"Tail chislic porchetta, spare ribs cupim short loin shoulder corned beef. Turducken prosciutto kielbasa fatback ham kevin. Swine meatloaf picanha venison, chuck filet mignon kielbasa brisket biltong spare ribs sirloin strip steak pork belly cupim capicola. Kevin beef ribs turducken pastrami leberkas, venison picanha shankle flank andouille capicola ground round ham. Strip steak tri-tip tongue ball tip capicola tenderloin. Ground round buffalo tail jowl pastrami venison shank meatball flank salami pork cow beef ribs.\"), \"\\n\", React.createElement(_components.p, null, \"Shank tri-tip chuck beef ribs. Leberkas doner brisket shankle pork chop, porchetta flank salami burgdoggen boudin. Ribeye doner strip steak flank, sirloin pancetta swine. Boudin shankle strip steak venison shoulder chuck. Corned beef boudin pork chop chicken jowl bacon alcatra capicola meatloaf ham short ribs shank drumstick fatback. Swine sausage ground round filet mignon, venison biltong turkey.\"), \"\\n\"), \"\\n\", React.createElement(CitationCard, null, React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Bacon Ipsum: \", React.createElement(ExternalLink, {\n    URL: \"https://baconipsum.com/\"\n  }, \"https://baconipsum.com/\")), \"\\n\", React.createElement(_components.li, null, \"Pete Nelson's Twitter Account: \", React.createElement(ExternalLink, {\n    URL: \"https://twitter.com/CodeGeekATX\"\n  }, \"https://twitter.com/CodeGeekATX\")), \"\\n\", React.createElement(_components.li, null, \"Google's Responsive Web Design Basics: \", React.createElement(ExternalLink, {\n    URL: \"https://web.dev/responsive-web-design-basics/#optimize-text-for-reading\"\n  }, \"https://web.dev/responsive-web-design-basics/#optimize-text-for-reading\")), \"\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/elugo/Code/ericlugo.github.io/content/notes/tools-bacon-ipsum.mdx\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrimaryLayout from \"../layout/Primary\";\nimport Hero from \"../components/Hero\";\nimport ExternalLink from \"../components/ExternalLink\";\nimport CitationCard from \"../components/CitationCard\";\nimport ImageCard from \"../components/ImageCard\";\nconst shortcodes = {\n  Link,\n  ExternalLink,\n  CitationCard,\n  ImageCard\n};\nconst regex = /(^.*\\/){1}/g;\nconst regexName = /(^.*(?=\\/))/g;\nexport const query = graphql`\n  query($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        alt_title\n        slug\n        edited_date(formatString: \"YYYY-MM-DD\")\n        category\n        hero\n        alt\n      }\n    }\n  }\n`;\nconst ContentTemplate = ({data, children}) => {\n  const imgData = data.mdx.frontmatter.hero && data.mdx.frontmatter.alt ? {\n    src: data.mdx.frontmatter.hero,\n    alt: data.mdx.frontmatter.alt\n  } : false;\n  return React.createElement(PrimaryLayout, {\n    className: imgData ? \"content\" : \"content borderTop\",\n    data: data,\n    withNav: true,\n    title: data.mdx.frontmatter.alt_title\n  }, imgData ? React.createElement(Hero, {\n    imgData: imgData\n  }) : '', React.createElement(\"header\", {\n    className: \"contentHeader\"\n  }, React.createElement(\"h1\", {\n    className: \"mainHeader\"\n  }, data.mdx.frontmatter.title), React.createElement(\"p\", {\n    className: \"subText\"\n  }, \"Category: \", data.mdx.frontmatter.category), React.createElement(\"p\", {\n    className: \"subText\"\n  }, \"Last Edited: \", data.mdx.frontmatter.edited_date)), React.createElement(Link, {\n    className: \"directoryLink\",\n    to: \"/\" + data.mdx.frontmatter.slug.match(regex)\n  }, \"< Go to \", data.mdx.frontmatter.slug.match(regexName), \" Directory\"), React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children), React.createElement(Link, {\n    className: \"directoryLink\",\n    to: \"/\" + data.mdx.frontmatter.slug.match(regex)\n  }, \"< Go to \", data.mdx.frontmatter.slug.match(regexName), \" Directory\"));\n};\nContentTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ContentTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from \"react\"\n\n\nconst CitationCard = ({ children }) => {\n  return (\n    <section className=\"citationCard\">\n      <h2>Article Links:</h2>\n      {children}\n    </section>\n  )\n}\n\n\nexport default CitationCard\n","import React from \"react\"\nimport { FiExternalLink } from \"react-icons/fi\"\n\n\nconst ExternalLink = ({ URL, citationNum, children }) => {\n  return (\n    <a className=\"externalLink\" href={URL} target=\"_blank\" rel=\"noreferrer noopener\">\n      {children}{citationNum ? <sup className=\"citationNum\">{citationNum}</sup> : ''}<small><FiExternalLink /></small>\n    </a>\n  )\n}\n\n\nexport default ExternalLink\n","import React from \"react\"\nimport { CloudinaryImage } from \"@cloudinary/url-gen\"\nimport { LazyLoadImage } from \"react-lazy-load-image-component\"\n\nimport \"../sass/components/ImageCard.scss\"\n\n\nconst ImageCard = ({ src, alt, caption=false, bordered=true, ar=\"16 / 9\" }) => {\n  const imagePath = new CloudinaryImage(src, {cloudName: \"elugo-dev-cloud\"})\n  .namedTransformation('t_natural')\n  .toURL()\n  const placeholderPath = new CloudinaryImage(src, {cloudName: \"elugo-dev-cloud\"})\n  .namedTransformation('t_placeholder_natural')\n  .toURL()\n  \n  let imageCardClass = 'imageCard';\n  if (!caption) imageCardClass += ' noCaption';\n  if (bordered==='false') imageCardClass += ' noBorder';\n  \n  return (\n    <figure className={imageCardClass}>\n      <LazyLoadImage\n        className='postImage'\n        src={imagePath}\n        placeholderSrc={placeholderPath}\n        wrapperClassName='postImageWrapper'\n        alt={alt}\n      />\n      {caption ? <figcaption>{caption}</figcaption> : ''}\n    </figure>\n  )\n}\n\n\nexport default ImageCard\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","blockquote","ol","li","_provideComponents","components","ExternalLink","CitationCard","_missingMdxReference","React","URL","citationNum","wrapper","MDXLayout","id","component","Error","shortcodes","Link","ImageCard","regex","regexName","ContentTemplate","_ref","data","children","imgData","mdx","frontmatter","hero","alt","src","PrimaryLayout","className","withNav","title","alt_title","Hero","category","edited_date","to","slug","match","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","href","target","rel","FiExternalLink","caption","bordered","ar","imagePath","CloudinaryImage","cloudName","namedTransformation","toURL","placeholderPath","imageCardClass","LazyLoadImage","placeholderSrc","wrapperClassName","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}