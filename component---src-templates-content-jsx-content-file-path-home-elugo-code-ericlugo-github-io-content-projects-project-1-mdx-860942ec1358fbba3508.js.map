{"version":3,"file":"component---src-templates-content-jsx-content-file-path-home-elugo-code-ericlugo-github-io-content-projects-project-1-mdx-860942ec1358fbba3508.js","mappings":"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","sources":["webpack://eric-lugo-dev-blog/./content/projects/project1.mdx","webpack://eric-lugo-dev-blog/./src/templates/content.jsx","webpack://eric-lugo-dev-blog/./src/components/CitationCard.jsx","webpack://eric-lugo-dev-blog/./src/components/ExternalLink.jsx","webpack://eric-lugo-dev-blog/./src/components/ImageCard.jsx","webpack://eric-lugo-dev-blog/./.yarn/__virtual__/@mdx-js-react-virtual-74dae20aac/0/cache/@mdx-js-react-npm-2.3.0-d5582a450b-f45fe77955.zip/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"H2 This is not as important\"), \"\\n\", React.createElement(_components.p, null, \"Bacon ipsum dolor amet prosciutto pork leberkas tail, cow filet mignon jowl frankfurter landjaeger strip steak alcatra meatloaf corned beef fatback doner. Drumstick jerky cow kevin. Capicola fatback picanha tenderloin kielbasa meatloaf shoulder shank burgdoggen. Rump spare ribs pancetta tri-tip tongue ribeye. Chuck pancetta chicken jerky prosciutto boudin salami short ribs. Leberkas hamburger fatback cow kevin brisket.\"), \"\\n\", React.createElement(_components.p, null, \"Jerky ham hock pork belly buffalo. Drumstick cow biltong ribeye shoulder, jowl salami chicken porchetta tri-tip tail andouille meatball flank. Ham hock spare ribs burgdoggen pancetta, t-bone jowl shank. Ground round pork belly pancetta swine buffalo chislic biltong t-bone. Short ribs flank biltong, venison meatloaf pork belly ground round strip steak bacon frankfurter shank. Ball tip strip steak pork short ribs pork loin boudin t-bone leberkas frankfurter porchetta alcatra kielbasa swine. Biltong buffalo alcatra pork chop spare ribs ball tip cupim.\"), \"\\n\", React.createElement(_components.p, null, \"Shank burgdoggen corned beef chuck. Ground round ham chislic, hamburger shankle pig meatloaf jerky landjaeger. Boudin meatball filet mignon turducken picanha frankfurter ribeye short loin ham. Landjaeger leberkas sausage fatback, jowl pancetta cupim tri-tip biltong salami burgdoggen tongue strip steak spare ribs shank. Tongue salami pork belly burgdoggen meatloaf.\"), \"\\n\", React.createElement(_components.p, null, \"Spare ribs ball tip salami, pork chuck ham hock rump pig corned beef filet mignon frankfurter doner swine tail hamburger. Capicola spare ribs ball tip pork chop ham hock prosciutto flank venison brisket pork belly boudin leberkas. Burgdoggen pancetta beef ribs kielbasa frankfurter kevin. Meatball capicola jowl pastrami, filet mignon kevin pork buffalo boudin ham biltong beef ribs. Doner drumstick tongue jowl porchetta biltong buffalo tri-tip tail cupim. Brisket cupim doner chuck pork belly shoulder. Doner buffalo filet mignon porchetta burgdoggen.\"), \"\\n\", React.createElement(_components.p, null, \"Bacon frankfurter shankle, swine tail short loin meatloaf filet mignon pig chislic jowl. Hamburger tri-tip venison kielbasa ground round strip steak short loin sausage meatloaf buffalo ham hock short ribs fatback capicola porchetta. Hamburger rump chuck sirloin, capicola brisket turducken buffalo pork loin pancetta cupim spare ribs flank. Pork chuck tail, beef ball tip pork belly ham hock andouille cow boudin filet mignon brisket flank meatball short loin.\"), \"\\n\", React.createElement(_components.h2, null, \"H2 Still not as important but nevertheless quite useful\"), \"\\n\", React.createElement(_components.p, null, \"Bacon ipsum dolor amet prosciutto pork leberkas tail, cow filet mignon jowl frankfurter landjaeger strip steak alcatra meatloaf corned beef fatback doner. Drumstick jerky cow kevin. Capicola fatback picanha tenderloin kielbasa meatloaf shoulder shank burgdoggen. Rump spare ribs pancetta tri-tip tongue ribeye. Chuck pancetta chicken jerky prosciutto boudin salami short ribs. Leberkas hamburger fatback cow kevin brisket.\"), \"\\n\", React.createElement(_components.h3, null, \"H3 A little less important but still just as useful\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Jerky ham hock pork belly buffalo.\"), \"\\n\", React.createElement(_components.li, null, \"Drumstick cow biltong ribeye shoulder, jowl salami chicken porchetta tri-tip tail andouille meatball flank.\"), \"\\n\", React.createElement(_components.li, null, \"Ham hock spare ribs burgdoggen pancetta, t-bone jowl shank.\"), \"\\n\", React.createElement(_components.li, null, \"Ground round pork belly pancetta swine buffalo chislic biltong t-bone.\"), \"\\n\", React.createElement(_components.li, null, \"Short ribs flank biltong, venison meatloaf pork belly ground round strip steak bacon frankfurter shank.\"), \"\\n\", React.createElement(_components.li, null, \"Ball tip strip steak pork short ribs pork loin boudin t-bone leberkas frankfurter porchetta alcatra kielbasa swine.\"), \"\\n\", React.createElement(_components.li, null, \"Biltong buffalo alcatra pork chop spare ribs ball tip cupim.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"H3 same thing, different day.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Shank burgdoggen corned beef chuck.\"), \"\\n\", React.createElement(_components.li, null, \"Ground round ham chislic, hamburger shankle pig meatloaf jerky landjaeger.\"), \"\\n\", React.createElement(_components.li, null, \"Boudin meatball filet mignon turducken picanha frankfurter ribeye short loin ham.\"), \"\\n\", React.createElement(_components.li, null, \"Landjaeger leberkas sausage fatback, jowl pancetta cupim tri-tip biltong salami burgdoggen tongue strip steak spare ribs shank.\"), \"\\n\", React.createElement(_components.li, null, \"Tongue salami pork belly burgdoggen meatloaf.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Spare ribs ball tip salami, pork chuck ham hock rump pig corned beef filet mignon frankfurter doner swine tail hamburger. Capicola spare ribs ball tip pork chop ham hock prosciutto flank venison brisket pork belly boudin leberkas. Burgdoggen pancetta beef ribs kielbasa frankfurter kevin. Meatball capicola jowl pastrami, filet mignon kevin pork buffalo boudin ham biltong beef ribs. Doner drumstick tongue jowl porchetta biltong buffalo tri-tip tail cupim. Brisket cupim doner chuck pork belly shoulder. Doner buffalo filet mignon porchetta burgdoggen.\"), \"\\n\", React.createElement(_components.p, null, \"Bacon frankfurter shankle, swine tail short loin meatloaf filet mignon pig chislic jowl. Hamburger tri-tip venison kielbasa ground round strip steak short loin sausage meatloaf buffalo ham hock short ribs fatback capicola porchetta. Hamburger rump chuck sirloin, capicola brisket turducken buffalo pork loin pancetta cupim spare ribs flank. Pork chuck tail, beef ball tip pork belly ham hock andouille cow boudin filet mignon brisket flank meatball short loin.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/elugo/Code/ericlugo.github.io/content/projects/project1.mdx\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrimaryLayout from \"../layout/Primary\";\nimport Hero from \"../components/Hero\";\nimport ExternalLink from \"../components/ExternalLink\";\nimport CitationCard from \"../components/CitationCard\";\nimport ImageCard from \"../components/ImageCard\";\nconst shortcodes = {\n  Link,\n  ExternalLink,\n  CitationCard,\n  ImageCard\n};\nconst regex = /(^.*\\/){1}/g;\nconst regexName = /(^.*(?=\\/))/g;\nexport const query = graphql`\n  query($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        slug\n        edited_date(formatString: \"YYYY-MM-DD\")\n        category\n        hero\n        alt\n      }\n    }\n  }\n`;\nconst ContentTemplate = ({data, children}) => {\n  const imgData = data.mdx.frontmatter.hero && data.mdx.frontmatter.alt ? {\n    src: data.mdx.frontmatter.hero,\n    alt: data.mdx.frontmatter.alt\n  } : false;\n  return React.createElement(PrimaryLayout, {\n    className: imgData ? \"content\" : \"content borderTop\",\n    data: data,\n    withNav: true\n  }, imgData ? React.createElement(Hero, {\n    imgData: imgData\n  }) : '', React.createElement(\"header\", {\n    className: \"contentHeader\"\n  }, React.createElement(\"h1\", {\n    className: \"mainHeader\"\n  }, data.mdx.frontmatter.title), React.createElement(\"p\", {\n    className: \"subText\"\n  }, \"Category: \", data.mdx.frontmatter.category), React.createElement(\"p\", {\n    className: \"subText\"\n  }, \"Last Edited: \", data.mdx.frontmatter.edited_date)), React.createElement(Link, {\n    className: \"directoryLink\",\n    to: \"/\" + data.mdx.frontmatter.slug.match(regex)\n  }, \"< Go to \", data.mdx.frontmatter.slug.match(regexName), \" Directory\"), React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children), React.createElement(Link, {\n    className: \"directoryLink\",\n    to: \"/\" + data.mdx.frontmatter.slug.match(regex)\n  }, \"< Go to \", data.mdx.frontmatter.slug.match(regexName), \" Directory\"));\n};\nContentTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ContentTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = ({data}) => React.createElement(\"title\", null, data.mdx.frontmatter.title);\n","import React from \"react\"\n\n\nconst CitationCard = ({ children }) => (\n  <section className=\"citationCard\">\n    <h2>Article Links:</h2>\n    {children}\n  </section>\n)\n\n\nexport default CitationCard\n","import React from \"react\"\nimport { FiExternalLink } from \"react-icons/fi\"\n\n\nconst ExternalLink = ({ URL, citationNum, children }) => (\n  <a className=\"externalLink\" href={URL} target=\"_blank\" rel=\"noreferrer noopener\">\n    {children}{citationNum ? <sup className=\"citationNum\">{citationNum}</sup> : ''} <small><FiExternalLink /></small>\n  </a>\n)\n\n\nexport default ExternalLink\n","import React from \"react\"\n\nimport \"../sass/components/Image.scss\"\n\n\nconst ImageCard = () => (\n  <>temp</>\n)\n\n\n\nexport default ImageCard\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","h3","ul","li","ol","_provideComponents","components","React","wrapper","MDXLayout","shortcodes","Link","ExternalLink","CitationCard","ImageCard","regex","regexName","ContentTemplate","_ref","data","children","imgData","mdx","frontmatter","hero","alt","src","PrimaryLayout","className","withNav","Hero","title","category","edited_date","to","slug","match","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","URL","citationNum","href","target","rel","FiExternalLink","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}