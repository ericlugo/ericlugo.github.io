@use "sass:map";
@use "../foundation/abstracts" as *;


/* == Generic Styles ======================================================= */

body {
  background-color: var(--background);
}

[data-loading="complete"] body {
  @media (prefers-reduced-motion: no-preference) {
    transition: background-color .15s ease-in, color .15s ease-in;
  }
}

[data-loading="complete"] a {
  @media (prefers-reduced-motion: no-preference) {
    transition: color .15s ease-in;
  }
}


/* == Typographic Styles =================================================== */

body {
  font-family: var(--mainFontFamily);
  font-size: var(--fontBase);
  font-weight: var(--regular);
  color: var(--foreground);
  overflow-x: hidden;
}

a {
  font-family: var(--codeFontFamily);
  text-decoration: none;
  color: var(--accent1);

  &:is(:hover, :active, :focus-visible) {
    color: var(--accent1-hover);
  }
}

p {
  line-height: var(--baseLineHeight);
}

em {
  font-style: italic;
}

strong {
  font-weight: var(--heavy);
}

code {
  font-family: var(--codeFontFamily);
}

small {
  font-size: var(--h6Size);
  line-height: var(--h6LineHeight);
}

h1, h2, h3, h4, h5, h6 {
  font-family: var(--mainFontFamily);
}

ul, ol {
  padding-left: var(--mainPadding);
}

:where(p, ul, ol, h1, h2, h3, h4, h5, h6) {
  margin: var(--mainMargin) 0;
}


/* == Generic Containers =================================================== */

:where(.layoutContainer) {
  min-height: 100vh;
  min-height: 100dvh;
  height: 100%;
  display: grid;
  grid-template-rows: auto 1fr auto;
}

[data-loading="complete"] :where(.layoutContainer) {
  @media (prefers-reduced-motion: no-preference) {
    transition: color .15s ease-in, background-color .15s ease-in;
  }
}

:where(.widthContainer) {
  margin: 0 auto;
  width: 100%;
  max-width: map.get($breakpoint, "md");

  @media (max-width: map.get($breakpoint, "md")) {
    padding: 0 0.5rem;
  }
}


/* == Special-Use Classes ================================================== */

:where(.mainHeader) {
  font-size: var(--h2Size);
  font-weight: var(--regular);
  line-height: var(--h2LineHeight);
}

:where(.subHeader) {
  font-size: var(--h4Size);
  font-weight: var(--regular);
  line-height: var(--h4LineHeight);
}

:where(.subText) {
  font-size: var(--h6Size);
  line-height: var(--h6LineHeight);
}

:where(.label) {
  display: inline-block;
  background-color: var(--card);
  border-radius: var(--borderRadius);
  padding: calc(var(--mainPadding) / 4) calc(var(--mainPadding) / 2);
  font-family: var(--codeFontFamily);
  font-size: var(--h6Size);
  line-height: var(--h6LineHeight);
}

:where(.tldr) {
  display: inline-block;
  background-color: var(--card);
  padding: var(--mainPadding);
  font-family: var(--codeFontFamily);
  font-size: var(--h6Size);
  line-height: var(--h6LineHeight);
}
